server {
    listen 80;

    # 1. React 앱 처리 (모든 경로의 기본 도착지)
    # 이 규칙은 다른 location 블록에 해당하지 않는 모든 요청을 받아서
    # React Router가 처리하도록 합니다.
    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

        # 1. SSE 구독 요청을 위한 특별 처리
        location /api/notifications/subscribe {
            proxy_pass http://backend:8080;

            # SSE를 위한 필수 헤더 설정
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;

            # 버퍼링 비활성화 (가장 중요)
            proxy_buffering off;

            # 캐시 비활성화
            proxy_cache off;

            # 타임아웃 시간 늘리기 (필요 시)
            # proxy_connect_timeout 3600s;
            # proxy_send_timeout 3600s;
            # proxy_read_timeout 3600s;
        }

    # 2. 백엔드 API 요청 처리
    location /api/ {
        proxy_pass http://backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 3. OAuth2 로그인 '시작' 요청 처리 (가장 구체적인 경로)
    # "/oauth2/"가 아닌 "/oauth2/authorization/"으로 정확히 지정합니다.
    location /oauth2/authorization/ {
        proxy_pass http://backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 4. 구글이 우리 서버로 다시 돌아오는 경로 처리
    location /login/oauth2/ {
        proxy_pass http://backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 5. 웹소켓 요청 처리
    location /ws-stomp/ {
        proxy_pass http://backend:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }
}